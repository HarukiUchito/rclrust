initSidebarItems({"fn":[["rcl_borrow_loaned_message","Borrow a loaned message."],["rcl_get_zero_initialized_publisher","Return a [rcl_publisher_t] struct with members set to `NULL`."],["rcl_publish","Publish a ROS message on a topic using a publisher."],["rcl_publish_loaned_message","Publish a loaned message on a topic using a publisher."],["rcl_publish_serialized_message","Publish a serialized message on a topic using a publisher."],["rcl_publisher_assert_liveliness","Manually assert that this Publisher is alive (for `RMW_QOS_POLICY_LIVELINESS_MANUAL_BY_TOPIC`)"],["rcl_publisher_can_loan_messages","Check if publisher instance can loan messages."],["rcl_publisher_fini","Finalize a rcl_publisher_t."],["rcl_publisher_get_actual_qos","Get the actual qos settings of the publisher."],["rcl_publisher_get_context","Return the context associated with this publisher."],["rcl_publisher_get_default_options","Return the default publisher options in a [rcl_publisher_options_t]."],["rcl_publisher_get_options","Return the rcl publisher options."],["rcl_publisher_get_subscription_count","Get the number of subscriptions matched to a publisher."],["rcl_publisher_get_topic_name","Get the topic name for the publisher."],["rcl_publisher_init","Initialize a rcl publisher."],["rcl_publisher_is_valid","Return the context associated with this publisher."],["rcl_publisher_is_valid_except_context","Return true if the publisher is valid, otherwise false."],["rcl_return_loaned_message_from_publisher","Return a loaned message previously borrowed from a publisher."]],"struct":[["rcl_publisher_impl_t","Internal rcl publisher implementation struct."],["rcl_publisher_options_t","Options available for a rcl publisher."],["rcl_publisher_t","Structure which encapsulates a ROS Publisher."]]});