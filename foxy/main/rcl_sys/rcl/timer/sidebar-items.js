initSidebarItems({"fn":[["rcl_get_zero_initialized_timer","Return a zero initialized timer."],["rcl_timer_call","Call the timerâ€™s callback and set the last call time."],["rcl_timer_cancel","Cancel a timer."],["rcl_timer_clock","Retrieve the clock of the timer."],["rcl_timer_exchange_callback","Exchange the current timer callback and return the current callback."],["rcl_timer_exchange_period","Exchange the period of the timer and return the previous period."],["rcl_timer_fini","Finalize a timer."],["rcl_timer_get_allocator","Return the allocator for the timer."],["rcl_timer_get_callback","Return the current timer callback."],["rcl_timer_get_guard_condition","Retrieve a guard condition used by the timer to wake the waitset when using ROSTime."],["rcl_timer_get_period","Retrieve the period of the timer."],["rcl_timer_get_time_since_last_call","Retrieve the time since the previous call to rcl_timer_call() occurred."],["rcl_timer_get_time_until_next_call","Calculate and retrieve the time until the next call in nanoseconds."],["rcl_timer_init","Initialize a timer."],["rcl_timer_is_canceled","Retrieve the canceled state of a timer."],["rcl_timer_is_ready","Calculates whether or not the timer should be called."],["rcl_timer_reset","Reset a timer."]],"struct":[["rcl_timer_t","Structure which encapsulates a ROS Timer."]],"type":[["rcl_timer_callback_t","User callback signature for timers."]]});